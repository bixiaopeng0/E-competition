/*-----------------------------------------------------------------------
* Date          :       2018/7/21 15:00:50  
* Version       :       1.0
* Description   :       Design for.
* --------------------------------------------------------------------*/

module  cefu
(
    //clk   interface
        input                   clk                     ,      
        input                   rst_n                   ,      
    //cefu  interface
        output reg     [10:0]   v_data                  ,
        input          [12:0]   q_sig                   ,
        input          [ 5:0]   source_exp  
);  


//--------------------------------
////Funtion : 
reg           [31:0]            x                   ;       
reg           [31:0]            x1                  ;

reg           [ 5:0]            move_number         ;

always @(posedge clk or negedge rst_n)
begin
    if(!rst_n)
        move_number <= 6'd0;
    else if(source_exp[5] == 1'b1)
        move_number <= 1'd0 - source_exp;
    else
        move_number <= source_exp;
end




always @(posedge clk or negedge rst_n)
begin
    if(!rst_n)
        x <= 32'd0;
    else if(source_exp[5] == 1'b1)
        x <= (q_sig << move_number);
    else
        x <= (q_sig >> move_number);
end



always @(posedge clk or negedge rst_n)
begin
    if(!rst_n)
        x1 <= 32'd0;
    else
        x1 <= {x - 10'd512};
end



always @(posedge clk or negedge rst_n)
begin
    if(!rst_n)
        v_data <= 'd0;
    else 
        v_data <= (x1 >> 4'd9);
end







endmodule





